definitions:
  models.Organization:
    properties:
      ID:
        type: integer
      alias:
        type: string
      country:
        type: string
      currency:
        type: string
      gstin:
        type: string
      gstreg:
        type: string
      legalName:
        type: string
      pan:
        type: string
      parentID:
        type: integer
      state:
        type: string
      userID:
        type: integer
    type: object
  models.User:
    properties:
      birthDate:
        type: string
      height:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Kitaab training API in Go and Gin Framework
  title: Kitaab User and Organisation Services API
  version: "1.0"
paths:
  /organization:
    get:
      description: Get Organisations details by Name
      parameters:
      - description: Organisation-Name
        in: query
        name: Organisation-Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Query Organisations By Name
      tags:
      - Organisation
  /organizations:
    get:
      description: Get All Organisations details
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "400":
          description: Error Details
          schema:
            type: string
      summary: Query All Organisations
      tags:
      - Organisation
    post:
      description: Saves Organisations data in DB
      parameters:
      - description: Organisation Data
        in: body
        name: Organisation-Details
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Create Organisations
      tags:
      - Organisation
  /organizations/{Organisation-ID}:
    delete:
      description: Delete Organisations details by ID
      parameters:
      - description: Organisation ID
        in: path
        name: Organisation-ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: boolean
        "400":
          description: Error Details
          schema:
            type: string
      summary: Delete Organisation By ID
      tags:
      - Organisation
    get:
      description: Get Organisations details by ID
      parameters:
      - description: Organisation ID
        in: path
        name: Organisation-ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Query Organisations By ID
      tags:
      - Organisation
    put:
      description: Update Organisations details by ID
      parameters:
      - description: Organisation ID
        in: path
        name: Organisation-ID
        required: true
        type: integer
      - description: Organisation Data
        in: body
        name: Organisation-Details
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Update Organisation By ID
      tags:
      - Organisation
  /users:
    get:
      description: Get All Users details
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Error Details
          schema:
            type: string
      summary: Query All Users
      tags:
      - Users
    post:
      description: Saves User data in DB
      parameters:
      - description: User Data
        in: body
        name: User-Details
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Create User
      tags:
      - Users
  /users/{user-ID}:
    delete:
      description: Delete Users details by ID
      parameters:
      - description: User ID
        in: path
        name: user-ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: boolean
        "400":
          description: Error Details
          schema:
            type: string
      summary: Delete User By ID
      tags:
      - Users
    get:
      description: Get Users details by ID
      parameters:
      - description: Users ID
        in: path
        name: user-ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Query Users By ID
      tags:
      - Users
    put:
      description: Update User details by ID
      parameters:
      - description: Users ID
        in: path
        name: user-ID
        required: true
        type: integer
      - description: User Data
        in: body
        name: User-Details
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Error Details
          schema:
            type: string
      summary: Update User By ID
      tags:
      - Users
swagger: "2.0"
