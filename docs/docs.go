// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/organization": {
            "get": {
                "description": "Get Organisations details by Name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Query Organisations By Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organisation-Name",
                        "name": "Organisation-Name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "description": "Get All Organisations details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Query All Organisations",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Organization"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Saves Organisations data in DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Create Organisations",
                "parameters": [
                    {
                        "description": "Organisation Data",
                        "name": "Organisation-Details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organizations/{Organisation-ID}": {
            "get": {
                "description": "Get Organisations details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Query Organisations By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organisation ID",
                        "name": "Organisation-ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Organisations details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Update Organisation By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organisation ID",
                        "name": "Organisation-ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organisation Data",
                        "name": "Organisation-Details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Organisations details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Delete Organisation By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organisation ID",
                        "name": "Organisation-ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get All Users details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Query All Users",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Saves User data in DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "User-Details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{user-ID}": {
            "get": {
                "description": "Get Users details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Query Users By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Users ID",
                        "name": "user-ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update User details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Users ID",
                        "name": "user-ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Data",
                        "name": "User-Details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Users details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user-ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Error Details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Organization": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "alias": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "gstin": {
                    "type": "string"
                },
                "gstreg": {
                    "type": "string"
                },
                "legalName": {
                    "type": "string"
                },
                "pan": {
                    "type": "string"
                },
                "parentID": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Kitaab User and Organisation Services API",
	Description:      "Kitaab training API in Go and Gin Framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
